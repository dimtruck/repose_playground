<?xml version="1.0"?>
<testsuite name="PhantomJS 1.9.8 (Mac OS X 0.0.0)" package="unit" timestamp="2015-08-28T16:49:10" id="0" hostname="localhost" tests="20" errors="0" failures="0" time="0.123">
  <properties>
    <property name="browser.fullName" value="Mozilla/5.0 (Macintosh; Intel Mac OS X) AppleWebKit/534.34 (KHTML, like Gecko) PhantomJS/1.9.8 Safari/534.34"/>
  </properties>
  <testcase name="should attach a list of awesomeThings to the scope" time="0.017" classname="unit Controller: AboutCtrl"/>
  <testcase name="should show landing page without any actions" time="0.004" classname="unit Controller: LoginCtrl When navigating to landing page"/>
  <testcase name="should not populate user model without any actions" time="0.005" classname="unit Controller: LoginCtrl When navigating to landing page"/>
  <testcase name="should not populate errors without any actions" time="0.006" classname="unit Controller: LoginCtrl When navigating to landing page"/>
  <testcase name="should not be submitted without any actions" time="0.003" classname="unit Controller: LoginCtrl When navigating to landing page"/>
  <testcase name="should show landing page" time="0.003" classname="unit Controller: LoginCtrl When logging in with invalid data"/>
  <testcase name="should not populate user model" time="0.004" classname="unit Controller: LoginCtrl When logging in with invalid data"/>
  <testcase name="should not populate errors" time="0.003" classname="unit Controller: LoginCtrl When logging in with invalid data"/>
  <testcase name="should set submitted to true" time="0.003" classname="unit Controller: LoginCtrl When logging in with invalid data"/>
  <testcase name="should redirect to internal page" time="0.011" classname="unit Controller: LoginCtrl When logging in with valid data"/>
  <testcase name="should set submitted to true" time="0.005" classname="unit Controller: LoginCtrl When logging in with valid data"/>
  <testcase name="should populate user model" time="0.004" classname="unit Controller: LoginCtrl When logging in with valid data"/>
  <testcase name="should not populate errors" time="0.004" classname="unit Controller: LoginCtrl When logging in with valid data"/>
  <testcase name="should stay on landing page" time="0.004" classname="unit Controller: LoginCtrl When getting invalid response from server"/>
  <testcase name="should set submitted to true" time="0.004" classname="unit Controller: LoginCtrl When getting invalid response from server"/>
  <testcase name="should populate user model" time="0.013" classname="unit Controller: LoginCtrl When getting invalid response from server"/>
  <testcase name="should populate errors" time="0.02" classname="unit Controller: LoginCtrl When getting invalid response from server"/>
  <testcase name="should attach a list of awesomeThings to the scope" time="0.004" classname="unit Controller: MainCtrl"/>
  <testcase name="should do something" time="0.003" classname="unit Service: Auth"/>
  <testcase name="should do something" time="0.003" classname="unit Service: User"/>
  <system-out><![CDATA[PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'routing', $UrlRouterProvider{rule: function (rule) { ... }, otherwise: function (rule) { ... }, when: function (what, handler) { ... }, deferIntercept: function (defer) { ... }, $get: function $get($location, $rootScope, $injector, $browser) { ... }}, $LocationProvider{hashPrefix: function (prefix) { ... }, html5Mode: function (mode) { ... }, $get: ['$rootScope', '$browser', '$sniffer', '$rootElement', '$window', function ($rootScope, $browser, $sniffer, $rootElement, $window) { ... }]}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'in login', $StateProvider{decorator: function decorator(name, func) { ... }, state: function state(name, definition) { ... }, $get: function $get($rootScope, $q, $view, $injector, $resolve, $stateParams, $urlRouter, $location, $urlMatcherFactory) { ... }}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: Object{$$html5: true, $$protocol: 'http', $$host: 'server', $$port: 80, $$parse: function (url) { ... }, $$compose: function () { ... }, $$parseLinkUrl: function (url, relHref) { ... }, $$path: '/', $$search: Object{}, $$hash: '', $$url: '/', $$absUrl: 'http://server/', $$state: undefined}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'run', Object{$$html5: true, $$protocol: 'http', $$host: 'server', $$port: 80, $$parse: function (url) { ... }, $$compose: function () { ... }, $$parseLinkUrl: function (url, relHref) { ... }, $$path: '/', $$search: Object{}, $$hash: '', $$url: '/', $$absUrl: 'http://server/', $$state: undefined}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'routing', $UrlRouterProvider{rule: function (rule) { ... }, otherwise: function (rule) { ... }, when: function (what, handler) { ... }, deferIntercept: function (defer) { ... }, $get: function $get($location, $rootScope, $injector, $browser) { ... }}, $LocationProvider{hashPrefix: function (prefix) { ... }, html5Mode: function (mode) { ... }, $get: ['$rootScope', '$browser', '$sniffer', '$rootElement', '$window', function ($rootScope, $browser, $sniffer, $rootElement, $window) { ... }]}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'in login', $StateProvider{decorator: function decorator(name, func) { ... }, state: function state(name, definition) { ... }, $get: function $get($rootScope, $q, $view, $injector, $resolve, $stateParams, $urlRouter, $location, $urlMatcherFactory) { ... }}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: Object{$$html5: true, $$protocol: 'http', $$host: 'server', $$port: 80, $$parse: function (url) { ... }, $$compose: function () { ... }, $$parseLinkUrl: function (url, relHref) { ... }, $$path: '/', $$search: Object{}, $$hash: '', $$url: '/', $$absUrl: 'http://server/', $$state: undefined}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'run', Object{$$html5: true, $$protocol: 'http', $$host: 'server', $$port: 80, $$parse: function (url) { ... }, $$compose: function () { ... }, $$parseLinkUrl: function (url, relHref) { ... }, $$path: '/', $$search: Object{}, $$hash: '', $$url: '/', $$absUrl: 'http://server/', $$state: undefined}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'in login controller'
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'routing', $UrlRouterProvider{rule: function (rule) { ... }, otherwise: function (rule) { ... }, when: function (what, handler) { ... }, deferIntercept: function (defer) { ... }, $get: function $get($location, $rootScope, $injector, $browser) { ... }}, $LocationProvider{hashPrefix: function (prefix) { ... }, html5Mode: function (mode) { ... }, $get: ['$rootScope', '$browser', '$sniffer', '$rootElement', '$window', function ($rootScope, $browser, $sniffer, $rootElement, $window) { ... }]}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'in login', $StateProvider{decorator: function decorator(name, func) { ... }, state: function state(name, definition) { ... }, $get: function $get($rootScope, $q, $view, $injector, $resolve, $stateParams, $urlRouter, $location, $urlMatcherFactory) { ... }}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: Object{$$html5: true, $$protocol: 'http', $$host: 'server', $$port: 80, $$parse: function (url) { ... }, $$compose: function () { ... }, $$parseLinkUrl: function (url, relHref) { ... }, $$path: '/', $$search: Object{}, $$hash: '', $$url: '/', $$absUrl: 'http://server/', $$state: undefined}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'run', Object{$$html5: true, $$protocol: 'http', $$host: 'server', $$port: 80, $$parse: function (url) { ... }, $$compose: function () { ... }, $$parseLinkUrl: function (url, relHref) { ... }, $$path: '/', $$search: Object{}, $$hash: '', $$url: '/', $$absUrl: 'http://server/', $$state: undefined}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'in login controller'
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'routing', $UrlRouterProvider{rule: function (rule) { ... }, otherwise: function (rule) { ... }, when: function (what, handler) { ... }, deferIntercept: function (defer) { ... }, $get: function $get($location, $rootScope, $injector, $browser) { ... }}, $LocationProvider{hashPrefix: function (prefix) { ... }, html5Mode: function (mode) { ... }, $get: ['$rootScope', '$browser', '$sniffer', '$rootElement', '$window', function ($rootScope, $browser, $sniffer, $rootElement, $window) { ... }]}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'in login', $StateProvider{decorator: function decorator(name, func) { ... }, state: function state(name, definition) { ... }, $get: function $get($rootScope, $q, $view, $injector, $resolve, $stateParams, $urlRouter, $location, $urlMatcherFactory) { ... }}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: Object{$$html5: true, $$protocol: 'http', $$host: 'server', $$port: 80, $$parse: function (url) { ... }, $$compose: function () { ... }, $$parseLinkUrl: function (url, relHref) { ... }, $$path: '/', $$search: Object{}, $$hash: '', $$url: '/', $$absUrl: 'http://server/', $$state: undefined}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'run', Object{$$html5: true, $$protocol: 'http', $$host: 'server', $$port: 80, $$parse: function (url) { ... }, $$compose: function () { ... }, $$parseLinkUrl: function (url, relHref) { ... }, $$path: '/', $$search: Object{}, $$hash: '', $$url: '/', $$absUrl: 'http://server/', $$state: undefined}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'in login controller'
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'routing', $UrlRouterProvider{rule: function (rule) { ... }, otherwise: function (rule) { ... }, when: function (what, handler) { ... }, deferIntercept: function (defer) { ... }, $get: function $get($location, $rootScope, $injector, $browser) { ... }}, $LocationProvider{hashPrefix: function (prefix) { ... }, html5Mode: function (mode) { ... }, $get: ['$rootScope', '$browser', '$sniffer', '$rootElement', '$window', function ($rootScope, $browser, $sniffer, $rootElement, $window) { ... }]}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'in login', $StateProvider{decorator: function decorator(name, func) { ... }, state: function state(name, definition) { ... }, $get: function $get($rootScope, $q, $view, $injector, $resolve, $stateParams, $urlRouter, $location, $urlMatcherFactory) { ... }}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: Object{$$html5: true, $$protocol: 'http', $$host: 'server', $$port: 80, $$parse: function (url) { ... }, $$compose: function () { ... }, $$parseLinkUrl: function (url, relHref) { ... }, $$path: '/', $$search: Object{}, $$hash: '', $$url: '/', $$absUrl: 'http://server/', $$state: undefined}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'run', Object{$$html5: true, $$protocol: 'http', $$host: 'server', $$port: 80, $$parse: function (url) { ... }, $$compose: function () { ... }, $$parseLinkUrl: function (url, relHref) { ... }, $$path: '/', $$search: Object{}, $$hash: '', $$url: '/', $$absUrl: 'http://server/', $$state: undefined}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'in login controller'
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'routing', $UrlRouterProvider{rule: function (rule) { ... }, otherwise: function (rule) { ... }, when: function (what, handler) { ... }, deferIntercept: function (defer) { ... }, $get: function $get($location, $rootScope, $injector, $browser) { ... }}, $LocationProvider{hashPrefix: function (prefix) { ... }, html5Mode: function (mode) { ... }, $get: ['$rootScope', '$browser', '$sniffer', '$rootElement', '$window', function ($rootScope, $browser, $sniffer, $rootElement, $window) { ... }]}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'in login', $StateProvider{decorator: function decorator(name, func) { ... }, state: function state(name, definition) { ... }, $get: function $get($rootScope, $q, $view, $injector, $resolve, $stateParams, $urlRouter, $location, $urlMatcherFactory) { ... }}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: Object{$$html5: true, $$protocol: 'http', $$host: 'server', $$port: 80, $$parse: function (url) { ... }, $$compose: function () { ... }, $$parseLinkUrl: function (url, relHref) { ... }, $$path: '/', $$search: Object{}, $$hash: '', $$url: '/', $$absUrl: 'http://server/', $$state: undefined}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'run', Object{$$html5: true, $$protocol: 'http', $$host: 'server', $$port: 80, $$parse: function (url) { ... }, $$compose: function () { ... }, $$parseLinkUrl: function (url, relHref) { ... }, $$path: '/', $$search: Object{}, $$hash: '', $$url: '/', $$absUrl: 'http://server/', $$state: undefined}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'in login controller'
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'routing', $UrlRouterProvider{rule: function (rule) { ... }, otherwise: function (rule) { ... }, when: function (what, handler) { ... }, deferIntercept: function (defer) { ... }, $get: function $get($location, $rootScope, $injector, $browser) { ... }}, $LocationProvider{hashPrefix: function (prefix) { ... }, html5Mode: function (mode) { ... }, $get: ['$rootScope', '$browser', '$sniffer', '$rootElement', '$window', function ($rootScope, $browser, $sniffer, $rootElement, $window) { ... }]}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'in login', $StateProvider{decorator: function decorator(name, func) { ... }, state: function state(name, definition) { ... }, $get: function $get($rootScope, $q, $view, $injector, $resolve, $stateParams, $urlRouter, $location, $urlMatcherFactory) { ... }}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: Object{$$html5: true, $$protocol: 'http', $$host: 'server', $$port: 80, $$parse: function (url) { ... }, $$compose: function () { ... }, $$parseLinkUrl: function (url, relHref) { ... }, $$path: '/', $$search: Object{}, $$hash: '', $$url: '/', $$absUrl: 'http://server/', $$state: undefined}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'run', Object{$$html5: true, $$protocol: 'http', $$host: 'server', $$port: 80, $$parse: function (url) { ... }, $$compose: function () { ... }, $$parseLinkUrl: function (url, relHref) { ... }, $$path: '/', $$search: Object{}, $$hash: '', $$url: '/', $$absUrl: 'http://server/', $$state: undefined}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'in login controller'
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'routing', $UrlRouterProvider{rule: function (rule) { ... }, otherwise: function (rule) { ... }, when: function (what, handler) { ... }, deferIntercept: function (defer) { ... }, $get: function $get($location, $rootScope, $injector, $browser) { ... }}, $LocationProvider{hashPrefix: function (prefix) { ... }, html5Mode: function (mode) { ... }, $get: ['$rootScope', '$browser', '$sniffer', '$rootElement', '$window', function ($rootScope, $browser, $sniffer, $rootElement, $window) { ... }]}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'in login', $StateProvider{decorator: function decorator(name, func) { ... }, state: function state(name, definition) { ... }, $get: function $get($rootScope, $q, $view, $injector, $resolve, $stateParams, $urlRouter, $location, $urlMatcherFactory) { ... }}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: Object{$$html5: true, $$protocol: 'http', $$host: 'server', $$port: 80, $$parse: function (url) { ... }, $$compose: function () { ... }, $$parseLinkUrl: function (url, relHref) { ... }, $$path: '/', $$search: Object{}, $$hash: '', $$url: '/', $$absUrl: 'http://server/', $$state: undefined}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'run', Object{$$html5: true, $$protocol: 'http', $$host: 'server', $$port: 80, $$parse: function (url) { ... }, $$compose: function () { ... }, $$parseLinkUrl: function (url, relHref) { ... }, $$path: '/', $$search: Object{}, $$hash: '', $$url: '/', $$absUrl: 'http://server/', $$state: undefined}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'in login controller'
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'routing', $UrlRouterProvider{rule: function (rule) { ... }, otherwise: function (rule) { ... }, when: function (what, handler) { ... }, deferIntercept: function (defer) { ... }, $get: function $get($location, $rootScope, $injector, $browser) { ... }}, $LocationProvider{hashPrefix: function (prefix) { ... }, html5Mode: function (mode) { ... }, $get: ['$rootScope', '$browser', '$sniffer', '$rootElement', '$window', function ($rootScope, $browser, $sniffer, $rootElement, $window) { ... }]}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'in login', $StateProvider{decorator: function decorator(name, func) { ... }, state: function state(name, definition) { ... }, $get: function $get($rootScope, $q, $view, $injector, $resolve, $stateParams, $urlRouter, $location, $urlMatcherFactory) { ... }}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: Object{$$html5: true, $$protocol: 'http', $$host: 'server', $$port: 80, $$parse: function (url) { ... }, $$compose: function () { ... }, $$parseLinkUrl: function (url, relHref) { ... }, $$path: '/', $$search: Object{}, $$hash: '', $$url: '/', $$absUrl: 'http://server/', $$state: undefined}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'run', Object{$$html5: true, $$protocol: 'http', $$host: 'server', $$port: 80, $$parse: function (url) { ... }, $$compose: function () { ... }, $$parseLinkUrl: function (url, relHref) { ... }, $$path: '/', $$search: Object{}, $$hash: '', $$url: '/', $$absUrl: 'http://server/', $$state: undefined}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'in login controller'
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'routing', $UrlRouterProvider{rule: function (rule) { ... }, otherwise: function (rule) { ... }, when: function (what, handler) { ... }, deferIntercept: function (defer) { ... }, $get: function $get($location, $rootScope, $injector, $browser) { ... }}, $LocationProvider{hashPrefix: function (prefix) { ... }, html5Mode: function (mode) { ... }, $get: ['$rootScope', '$browser', '$sniffer', '$rootElement', '$window', function ($rootScope, $browser, $sniffer, $rootElement, $window) { ... }]}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'in login', $StateProvider{decorator: function decorator(name, func) { ... }, state: function state(name, definition) { ... }, $get: function $get($rootScope, $q, $view, $injector, $resolve, $stateParams, $urlRouter, $location, $urlMatcherFactory) { ... }}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: Object{$$html5: true, $$protocol: 'http', $$host: 'server', $$port: 80, $$parse: function (url) { ... }, $$compose: function () { ... }, $$parseLinkUrl: function (url, relHref) { ... }, $$path: '/', $$search: Object{}, $$hash: '', $$url: '/', $$absUrl: 'http://server/', $$state: undefined}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'run', Object{$$html5: true, $$protocol: 'http', $$host: 'server', $$port: 80, $$parse: function (url) { ... }, $$compose: function () { ... }, $$parseLinkUrl: function (url, relHref) { ... }, $$path: '/', $$search: Object{}, $$hash: '', $$url: '/', $$absUrl: 'http://server/', $$state: undefined}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'in login controller'
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'routing', $UrlRouterProvider{rule: function (rule) { ... }, otherwise: function (rule) { ... }, when: function (what, handler) { ... }, deferIntercept: function (defer) { ... }, $get: function $get($location, $rootScope, $injector, $browser) { ... }}, $LocationProvider{hashPrefix: function (prefix) { ... }, html5Mode: function (mode) { ... }, $get: ['$rootScope', '$browser', '$sniffer', '$rootElement', '$window', function ($rootScope, $browser, $sniffer, $rootElement, $window) { ... }]}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'in login', $StateProvider{decorator: function decorator(name, func) { ... }, state: function state(name, definition) { ... }, $get: function $get($rootScope, $q, $view, $injector, $resolve, $stateParams, $urlRouter, $location, $urlMatcherFactory) { ... }}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: Object{$$html5: true, $$protocol: 'http', $$host: 'server', $$port: 80, $$parse: function (url) { ... }, $$compose: function () { ... }, $$parseLinkUrl: function (url, relHref) { ... }, $$path: '/', $$search: Object{}, $$hash: '', $$url: '/', $$absUrl: 'http://server/', $$state: undefined}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'run', Object{$$html5: true, $$protocol: 'http', $$host: 'server', $$port: 80, $$parse: function (url) { ... }, $$compose: function () { ... }, $$parseLinkUrl: function (url, relHref) { ... }, $$path: '/', $$search: Object{}, $$hash: '', $$url: '/', $$absUrl: 'http://server/', $$state: undefined}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'in login controller'
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'routing', $UrlRouterProvider{rule: function (rule) { ... }, otherwise: function (rule) { ... }, when: function (what, handler) { ... }, deferIntercept: function (defer) { ... }, $get: function $get($location, $rootScope, $injector, $browser) { ... }}, $LocationProvider{hashPrefix: function (prefix) { ... }, html5Mode: function (mode) { ... }, $get: ['$rootScope', '$browser', '$sniffer', '$rootElement', '$window', function ($rootScope, $browser, $sniffer, $rootElement, $window) { ... }]}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'in login', $StateProvider{decorator: function decorator(name, func) { ... }, state: function state(name, definition) { ... }, $get: function $get($rootScope, $q, $view, $injector, $resolve, $stateParams, $urlRouter, $location, $urlMatcherFactory) { ... }}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: Object{$$html5: true, $$protocol: 'http', $$host: 'server', $$port: 80, $$parse: function (url) { ... }, $$compose: function () { ... }, $$parseLinkUrl: function (url, relHref) { ... }, $$path: '/', $$search: Object{}, $$hash: '', $$url: '/', $$absUrl: 'http://server/', $$state: undefined}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'run', Object{$$html5: true, $$protocol: 'http', $$host: 'server', $$port: 80, $$parse: function (url) { ... }, $$compose: function () { ... }, $$parseLinkUrl: function (url, relHref) { ... }, $$path: '/', $$search: Object{}, $$hash: '', $$url: '/', $$absUrl: 'http://server/', $$state: undefined}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'in login controller'
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'routing', $UrlRouterProvider{rule: function (rule) { ... }, otherwise: function (rule) { ... }, when: function (what, handler) { ... }, deferIntercept: function (defer) { ... }, $get: function $get($location, $rootScope, $injector, $browser) { ... }}, $LocationProvider{hashPrefix: function (prefix) { ... }, html5Mode: function (mode) { ... }, $get: ['$rootScope', '$browser', '$sniffer', '$rootElement', '$window', function ($rootScope, $browser, $sniffer, $rootElement, $window) { ... }]}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'in login', $StateProvider{decorator: function decorator(name, func) { ... }, state: function state(name, definition) { ... }, $get: function $get($rootScope, $q, $view, $injector, $resolve, $stateParams, $urlRouter, $location, $urlMatcherFactory) { ... }}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: Object{$$html5: true, $$protocol: 'http', $$host: 'server', $$port: 80, $$parse: function (url) { ... }, $$compose: function () { ... }, $$parseLinkUrl: function (url, relHref) { ... }, $$path: '/', $$search: Object{}, $$hash: '', $$url: '/', $$absUrl: 'http://server/', $$state: undefined}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'run', Object{$$html5: true, $$protocol: 'http', $$host: 'server', $$port: 80, $$parse: function (url) { ... }, $$compose: function () { ... }, $$parseLinkUrl: function (url, relHref) { ... }, $$path: '/', $$search: Object{}, $$hash: '', $$url: '/', $$absUrl: 'http://server/', $$state: undefined}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'in login controller'
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'routing', $UrlRouterProvider{rule: function (rule) { ... }, otherwise: function (rule) { ... }, when: function (what, handler) { ... }, deferIntercept: function (defer) { ... }, $get: function $get($location, $rootScope, $injector, $browser) { ... }}, $LocationProvider{hashPrefix: function (prefix) { ... }, html5Mode: function (mode) { ... }, $get: ['$rootScope', '$browser', '$sniffer', '$rootElement', '$window', function ($rootScope, $browser, $sniffer, $rootElement, $window) { ... }]}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'in login', $StateProvider{decorator: function decorator(name, func) { ... }, state: function state(name, definition) { ... }, $get: function $get($rootScope, $q, $view, $injector, $resolve, $stateParams, $urlRouter, $location, $urlMatcherFactory) { ... }}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: Object{$$html5: true, $$protocol: 'http', $$host: 'server', $$port: 80, $$parse: function (url) { ... }, $$compose: function () { ... }, $$parseLinkUrl: function (url, relHref) { ... }, $$path: '/', $$search: Object{}, $$hash: '', $$url: '/', $$absUrl: 'http://server/', $$state: undefined}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'run', Object{$$html5: true, $$protocol: 'http', $$host: 'server', $$port: 80, $$parse: function (url) { ... }, $$compose: function () { ... }, $$parseLinkUrl: function (url, relHref) { ... }, $$path: '/', $$search: Object{}, $$hash: '', $$url: '/', $$absUrl: 'http://server/', $$state: undefined}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'in login controller'
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'routing', $UrlRouterProvider{rule: function (rule) { ... }, otherwise: function (rule) { ... }, when: function (what, handler) { ... }, deferIntercept: function (defer) { ... }, $get: function $get($location, $rootScope, $injector, $browser) { ... }}, $LocationProvider{hashPrefix: function (prefix) { ... }, html5Mode: function (mode) { ... }, $get: ['$rootScope', '$browser', '$sniffer', '$rootElement', '$window', function ($rootScope, $browser, $sniffer, $rootElement, $window) { ... }]}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'in login', $StateProvider{decorator: function decorator(name, func) { ... }, state: function state(name, definition) { ... }, $get: function $get($rootScope, $q, $view, $injector, $resolve, $stateParams, $urlRouter, $location, $urlMatcherFactory) { ... }}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: Object{$$html5: true, $$protocol: 'http', $$host: 'server', $$port: 80, $$parse: function (url) { ... }, $$compose: function () { ... }, $$parseLinkUrl: function (url, relHref) { ... }, $$path: '/', $$search: Object{}, $$hash: '', $$url: '/', $$absUrl: 'http://server/', $$state: undefined}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'run', Object{$$html5: true, $$protocol: 'http', $$host: 'server', $$port: 80, $$parse: function (url) { ... }, $$compose: function () { ... }, $$parseLinkUrl: function (url, relHref) { ... }, $$path: '/', $$search: Object{}, $$hash: '', $$url: '/', $$absUrl: 'http://server/', $$state: undefined}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'in login controller'
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'routing', $UrlRouterProvider{rule: function (rule) { ... }, otherwise: function (rule) { ... }, when: function (what, handler) { ... }, deferIntercept: function (defer) { ... }, $get: function $get($location, $rootScope, $injector, $browser) { ... }}, $LocationProvider{hashPrefix: function (prefix) { ... }, html5Mode: function (mode) { ... }, $get: ['$rootScope', '$browser', '$sniffer', '$rootElement', '$window', function ($rootScope, $browser, $sniffer, $rootElement, $window) { ... }]}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'in login', $StateProvider{decorator: function decorator(name, func) { ... }, state: function state(name, definition) { ... }, $get: function $get($rootScope, $q, $view, $injector, $resolve, $stateParams, $urlRouter, $location, $urlMatcherFactory) { ... }}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: Object{$$html5: true, $$protocol: 'http', $$host: 'server', $$port: 80, $$parse: function (url) { ... }, $$compose: function () { ... }, $$parseLinkUrl: function (url, relHref) { ... }, $$path: '/', $$search: Object{}, $$hash: '', $$url: '/', $$absUrl: 'http://server/', $$state: undefined}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'run', Object{$$html5: true, $$protocol: 'http', $$host: 'server', $$port: 80, $$parse: function (url) { ... }, $$compose: function () { ... }, $$parseLinkUrl: function (url, relHref) { ... }, $$path: '/', $$search: Object{}, $$hash: '', $$url: '/', $$absUrl: 'http://server/', $$state: undefined}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'in login controller'
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'routing', $UrlRouterProvider{rule: function (rule) { ... }, otherwise: function (rule) { ... }, when: function (what, handler) { ... }, deferIntercept: function (defer) { ... }, $get: function $get($location, $rootScope, $injector, $browser) { ... }}, $LocationProvider{hashPrefix: function (prefix) { ... }, html5Mode: function (mode) { ... }, $get: ['$rootScope', '$browser', '$sniffer', '$rootElement', '$window', function ($rootScope, $browser, $sniffer, $rootElement, $window) { ... }]}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'in login', $StateProvider{decorator: function decorator(name, func) { ... }, state: function state(name, definition) { ... }, $get: function $get($rootScope, $q, $view, $injector, $resolve, $stateParams, $urlRouter, $location, $urlMatcherFactory) { ... }}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: Object{$$html5: true, $$protocol: 'http', $$host: 'server', $$port: 80, $$parse: function (url) { ... }, $$compose: function () { ... }, $$parseLinkUrl: function (url, relHref) { ... }, $$path: '/', $$search: Object{}, $$hash: '', $$url: '/', $$absUrl: 'http://server/', $$state: undefined}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'run', Object{$$html5: true, $$protocol: 'http', $$host: 'server', $$port: 80, $$parse: function (url) { ... }, $$compose: function () { ... }, $$parseLinkUrl: function (url, relHref) { ... }, $$path: '/', $$search: Object{}, $$hash: '', $$url: '/', $$absUrl: 'http://server/', $$state: undefined}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'in login controller'
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'routing', $UrlRouterProvider{rule: function (rule) { ... }, otherwise: function (rule) { ... }, when: function (what, handler) { ... }, deferIntercept: function (defer) { ... }, $get: function $get($location, $rootScope, $injector, $browser) { ... }}, $LocationProvider{hashPrefix: function (prefix) { ... }, html5Mode: function (mode) { ... }, $get: ['$rootScope', '$browser', '$sniffer', '$rootElement', '$window', function ($rootScope, $browser, $sniffer, $rootElement, $window) { ... }]}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'in login', $StateProvider{decorator: function decorator(name, func) { ... }, state: function state(name, definition) { ... }, $get: function $get($rootScope, $q, $view, $injector, $resolve, $stateParams, $urlRouter, $location, $urlMatcherFactory) { ... }}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: Object{$$html5: true, $$protocol: 'http', $$host: 'server', $$port: 80, $$parse: function (url) { ... }, $$compose: function () { ... }, $$parseLinkUrl: function (url, relHref) { ... }, $$path: '/', $$search: Object{}, $$hash: '', $$url: '/', $$absUrl: 'http://server/', $$state: undefined}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'run', Object{$$html5: true, $$protocol: 'http', $$host: 'server', $$port: 80, $$parse: function (url) { ... }, $$compose: function () { ... }, $$parseLinkUrl: function (url, relHref) { ... }, $$path: '/', $$search: Object{}, $$hash: '', $$url: '/', $$absUrl: 'http://server/', $$state: undefined}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'routing', $UrlRouterProvider{rule: function (rule) { ... }, otherwise: function (rule) { ... }, when: function (what, handler) { ... }, deferIntercept: function (defer) { ... }, $get: function $get($location, $rootScope, $injector, $browser) { ... }}, $LocationProvider{hashPrefix: function (prefix) { ... }, html5Mode: function (mode) { ... }, $get: ['$rootScope', '$browser', '$sniffer', '$rootElement', '$window', function ($rootScope, $browser, $sniffer, $rootElement, $window) { ... }]}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'in login', $StateProvider{decorator: function decorator(name, func) { ... }, state: function state(name, definition) { ... }, $get: function $get($rootScope, $q, $view, $injector, $resolve, $stateParams, $urlRouter, $location, $urlMatcherFactory) { ... }}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: Object{$$html5: true, $$protocol: 'http', $$host: 'server', $$port: 80, $$parse: function (url) { ... }, $$compose: function () { ... }, $$parseLinkUrl: function (url, relHref) { ... }, $$path: '/', $$search: Object{}, $$hash: '', $$url: '/', $$absUrl: 'http://server/', $$state: undefined}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'run', Object{$$html5: true, $$protocol: 'http', $$host: 'server', $$port: 80, $$parse: function (url) { ... }, $$compose: function () { ... }, $$parseLinkUrl: function (url, relHref) { ... }, $$path: '/', $$search: Object{}, $$hash: '', $$url: '/', $$absUrl: 'http://server/', $$state: undefined}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'routing', $UrlRouterProvider{rule: function (rule) { ... }, otherwise: function (rule) { ... }, when: function (what, handler) { ... }, deferIntercept: function (defer) { ... }, $get: function $get($location, $rootScope, $injector, $browser) { ... }}, $LocationProvider{hashPrefix: function (prefix) { ... }, html5Mode: function (mode) { ... }, $get: ['$rootScope', '$browser', '$sniffer', '$rootElement', '$window', function ($rootScope, $browser, $sniffer, $rootElement, $window) { ... }]}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'in login', $StateProvider{decorator: function decorator(name, func) { ... }, state: function state(name, definition) { ... }, $get: function $get($rootScope, $q, $view, $injector, $resolve, $stateParams, $urlRouter, $location, $urlMatcherFactory) { ... }}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: Object{$$html5: true, $$protocol: 'http', $$host: 'server', $$port: 80, $$parse: function (url) { ... }, $$compose: function () { ... }, $$parseLinkUrl: function (url, relHref) { ... }, $$path: '/', $$search: Object{}, $$hash: '', $$url: '/', $$absUrl: 'http://server/', $$state: undefined}
,PhantomJS 1.9.8 (Mac OS X 0.0.0) LOG: 'run', Object{$$html5: true, $$protocol: 'http', $$host: 'server', $$port: 80, $$parse: function (url) { ... }, $$compose: function () { ... }, $$parseLinkUrl: function (url, relHref) { ... }, $$path: '/', $$search: Object{}, $$hash: '', $$url: '/', $$absUrl: 'http://server/', $$state: undefined}

]]></system-out>
  <system-err/>
</testsuite>
